TARGET_PLATFORM ?= linux

WINE_LIB ?=	/usr/lib/i386-linux-gnu/wine
# Uncomment for wine-devel:
#WINE_LIB = /opt/wine-devel/lib/wine /opt/wine-devel/lib
I386_LIB ?=	/usr/lib/i386-linux-gnu
STDCXX_LIB ?=	/usr/lib/gcc/i686-linux-gnu/$(WINEGCC_VER)

# Print scr-spi-ftdi statistics before exit
CPPFLAGS +=	-DSPI_STATS
# Enable LEDs
CPPFLAGS += -DENABLE_LEDS

# Compile with debugging
#CFLAGS += -g -fno-inline
#LDFLAGS += -g -fno-inline
# Compile without debugging
LDFLAGS += -s

WINEGCC_VER := $(shell env LC_ALL=C winegcc -v 2>&1 | awk '/^gcc version/ {print $$3}' | cut -d. -f1,2)
VERSION := $(shell cat VERSION)
GIT_REVISION := $(shell git log -1 --format=%h 2>/dev/null)
CPPFLAGS +=	-DVERSION=\"$(VERSION)\" -DGIT_REVISION=\"$(GIT_REVISION)\"

CC =	winegcc
CXX =	wineg++
LD =	winegcc
CFLAGS +=	-Wall -m32 -fPIC -DPIC
CXXFLAGS += -fno-exceptions
LDFLAGS +=	-shared -m32 -static-libgcc
# 64 bit winegcc tries to link with 64 bit wine libs even if -m32 is specified.
# Direct it to the 32bit libraries.
LDFLAGS +=	$(addprefix -L,$(WINE_LIB)) $(addprefix -L,$(I386_LIB)) $(addprefix -L,$(STDCXX_LIB))
#LDLIBS=	-lftdi -lusb-1.0
# Build with static versions of libraries
LDLIBS +=	$(I386_LIB)/libftdi.a $(I386_LIB)/libusb.a

MAKEFILE =	$(firstword $(MAKEFILE_LIST))

LIBDIR = lib-wine-$(TARGET_PLATFORM)
OBJDIR = obj-wine-$(TARGET_PLATFORM)
LIBNAME = usbspi.dll.so
LIBRARY_SPEC = usbspi.dll.spec

all: $(LIBDIR)/$(LIBNAME)

$(LIBDIR)/$(LIBNAME): $(OBJDIR)/$(LIBNAME)
	mkdir -p $(LIBDIR)
	cp -p $< $@

$(OBJDIR)/$(LIBNAME): $(OBJDIR)/dllmain.o $(OBJDIR)/basics.o $(OBJDIR)/spi.o $(OBJDIR)/logging.o $(LIBRARY_SPEC)
	$(LD) $(LDFLAGS) $^ -o $@ $(LDLIBS)

install:
	install -m 0644 -o root -g root $(OBJDIR)/$(LIBNAME) $(WINE_LIB)/$(LIBNAME)

$(OBJDIR)/basics.o: spi.h spifns.h logging.h dllmain.h compat.h
$(OBJDIR)/spi.o: spi.h compat.h logging.h
$(OBJDIR)/logging.o: logging.h compat.h

$(OBJDIR)/%.o: %.c
	mkdir -p $(OBJDIR)
	$(CC) -c $(CFLAGS) $(CPPFLAGS) -o $@ $<

$(OBJDIR)/%.o: %.cpp
	mkdir -p $(OBJDIR)
	$(CXX) -c $(CFLAGS) $(CXXFLAGS) $(CPPFLAGS) -o $@ $<

clean:
	rm -fr $(LIBDIR) $(OBJDIR)
